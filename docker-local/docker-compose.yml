version: '3.7'

services:
    api.prometheus.grafana.presentation:
        container_name: api.prometheus.grafana.presentation
        hostname: api.prometheus.grafana.presentation
        image: api.prometheus.grafana.presentation
        depends_on:
            - kafka
            - mongodb
            - grafana
        build:
            context: ../
            dockerfile: docker-local/Dockerfile
        networks:
            - bubble
        ports:
            - 8080:8080
    kafka:
        container_name: kafka
        image: confluentinc/cp-kafka:5.3.1
        ports:
            - 9092:9092
            - 9093:9093
        depends_on:
            - zookeeper
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://kafka:9093
            KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
        volumes:
            - kafka:/var/lib/kafka/data
        networks:
            - bubble

    zookeeper:
        container_name: zookeeper
        image: confluentinc/cp-zookeeper:5.3.1
        ports:
            - 2181:2181
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        volumes:
            - zookeeper:/data
            - zookeeper:/datalog
        networks:
            - bubble

    kafdrop:
        container_name: kafdrop
        image: obsidiandynamics/kafdrop
        restart: "no"
        ports:
            - "9000:9000"
        environment:
            KAFKA_BROKERCONNECT: "kafka:9092"
            JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
        depends_on:
            - "kafka"
        networks:
            - bubble

    mongodb:
        container_name: mongodb
        image: mongo
        restart: "no"
        ports:
            - "27017:27017"
        networks:
            - bubble

    prometheus:
        container_name: prometheus
        image: prom/prometheus
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
        command:
            - --config.file=/etc/prometheus/prometheus.yml
        ports:
            - 9090:9090
        networks:
            - bubble

    grafana:
        container_name: grafana
        image: grafana/grafana
        depends_on:
            - prometheus
        ports:
            - 3000:3000
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=local
            - GF_USERS_ALLOW_SIGN_UP=false
        networks:
            - bubble
        restart: always

volumes:
    grafana:
    zookeeper:
    kafka:
    mongodb:
    prometheus:

networks:
    bubble: